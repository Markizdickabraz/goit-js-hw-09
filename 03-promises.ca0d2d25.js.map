{"mappings":"YAAA,IAAMA,EAAkBC,SAASC,kBAAkB,SAC7CC,EAAiBF,SAASC,kBAAkB,QAC5CE,EAAcH,SAASC,kBAAkB,UACzCG,EAAMJ,SAASK,cAAc,UAE/BC,EAAkB,KAClBC,EAAa,KAEbC,EAAa,KAGjBJ,EAAIK,iBAAiB,SAGrB,SAAuBC,EAAUC,GAC/BC,MAAMC,iBACNF,EAAQT,EAAe,GAAGY,MAC1BC,QAAQC,IAAIL,GACZH,EAAaT,EAAgB,GAAGe,MAChCC,QAAQC,IAAIR,GAEZS,YAAW,WAGTV,EAAaW,aAAY,WAC3B,IAAK,IAAIC,EAAI,EAAGA,GAAKhB,EAAY,GAAGW,MAAOK,GAAK,EAAG,CACjDb,GAAkB,EACP,EACWc,KAAKC,SAGzBN,QAAQO,IAAIhB,GAMXH,EAAY,GAAGW,OAASR,GACzBiB,cAAchB,E,IAGdI,E,GAGAH,E","sources":["src/js/03-promises.js"],"sourcesContent":["const inputFirstDelay = document.getElementsByName('delay');\nconst inputStepDelay = document.getElementsByName('step');\nconst inputAmount = document.getElementsByName('amount'); \nconst btn = document.querySelector('button');\n    \nlet positionPromise = null;\nlet intervalId = null;\nlet delay = null;\nlet firstDelay = null;\nlet intvalTimeout = null;\n\nbtn.addEventListener('click', createPromise);\n\n\nfunction createPromise(position, delay) {\n  event.preventDefault();\n  delay = inputStepDelay[0].value;\n  console.log(delay);\n  firstDelay = inputFirstDelay[0].value;\n  console.log(firstDelay);\n\n  setTimeout(() => {\n    \n \n    intervalId = setInterval(() =>{\n  for (let i = 1; i <= inputAmount[0].value; i += 1) {\n    positionPromise +=1;\n    position +=1;\n    const shouldResolve = Math.random() > 0.3;\n    if (shouldResolve) {\n      // Fulfill\n      console.dir(positionPromise);\n    } else {\n      // Reject\n      console.dir(positionPromise);\n    }\n\n   if (inputAmount[0].value == positionPromise) {\n      clearInterval(intervalId);\n    }\n    \n  }}, delay)\n  \n \n   }, firstDelay);\n};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// const btnDisabled = () => {\n//   btn.disabled = true;\n// };\n\n// btn.addEventListener('click', createPromise); \n\n\n// function createPromise(position, delay) {\n\n\n//   btnDisabled();\n//   firstDelay = inputFirstDelay[0].value;\n// return new Promise((resolve, reject) => {\n//   setTimeout(() => {\n//     delay = inputStepDelay[0].value;\n     \n//          intervalId = setInterval(() => {\n//       positionPromise += 1;\n//       let amount = inputAmount[0].value;\n     \n//       if (amount == positionPromise) {\n//         clearInterval(intervalId);\n//         location.reload();\n//       }\n      \n//       const shouldResolve = Math.random() > 0.3;\n//         if (shouldResolve) {\n//         // Fulfill\n//       console.log(position);\n      \n//       } else {\n//         console.dir(position);\n//         // reject\n//       }\n//       }, delay) \n//   }, firstDelay)})\n//     // return promise;\n// };\n\n// // promise.then(({ position, delay }) => {\n// //     console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n// //   })\n// //   .catch(({ position, delay }) => {\n// //     console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n// //   });"],"names":["$ce04d3a99e08e73b$var$inputFirstDelay","document","getElementsByName","$ce04d3a99e08e73b$var$inputStepDelay","$ce04d3a99e08e73b$var$inputAmount","$ce04d3a99e08e73b$var$btn","querySelector","$ce04d3a99e08e73b$var$positionPromise","$ce04d3a99e08e73b$var$intervalId","$ce04d3a99e08e73b$var$firstDelay","addEventListener","position","delay1","event","preventDefault","value","console","log","setTimeout","setInterval","i","Math","random","dir","clearInterval"],"version":3,"file":"03-promises.ca0d2d25.js.map"}