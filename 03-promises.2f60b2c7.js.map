{"mappings":"AAAA,MAAMA,EAAkBC,SAASC,kBAAkB,SAC7CC,EAAiBF,SAASC,kBAAkB,QAC5CE,EAAcH,SAASC,kBAAkB,UACzCG,EAAMJ,SAASK,cAAc,UAEnC,IAAIC,EAAkB,KAElBC,EAAQ,KACRC,EAAa,KACbC,EAAS,KACTC,EAAY,KAkChB,SAASC,EAAcC,EAAUC,GAgB/B,OAfAA,EAAQX,EAAe,GAAGY,MAC1BR,GAAmB,EACnBM,EAAWN,EACI,IAAIS,SAAQ,CAACC,EAASC,KAEbC,KAAKC,SAAW,GAGpCH,EAAQ,CAAEI,SAAAR,EAAUS,MAAAR,IAEpBI,EAAO,CAAEG,SAAAR,EAAUS,MAAAR,GAAQ,G,CAtCjCT,EAAIkB,iBAAiB,SAErB,SAA8BC,GAC5BA,EAAMC,iBACNjB,EAAQL,EAAe,GAAGY,MAC1BL,EAASN,EAAY,GAAGW,MACxBN,EAAaT,EAAgB,GAAGe,MAEhCJ,EAAYe,YAAW,KACrB,IAAK,IAAIC,EAAI,EAAGA,EAAIjB,EAAQiB,GAAK,EAC/BD,YAAW,KAEbd,EAAc,EAAG,MAClBgB,MAAK,EAAGP,SAAAQ,EAAUP,MAAAQ,MACjBC,QAAQC,IAAI,uBAAqBH,QAAiBC,MAAU,IAE7DG,OAAM,EAAGZ,SAAAa,EAAUZ,MAAAa,MAClBJ,QAAQC,IAAI,sBAAoBE,QAAiBC,MAAU,GAC3D,GAEG3B,EAAM,GAGTC,E","sources":["src/js/03-promises.js"],"sourcesContent":["const inputFirstDelay = document.getElementsByName('delay');\nconst inputStepDelay = document.getElementsByName('step');\nconst inputAmount = document.getElementsByName('amount'); \nconst btn = document.querySelector('button');\n    \nlet positionPromise = null;\nlet intervalId = null;\nlet delay = null;\nlet firstDelay = null;\nlet amount = null;\nlet timeoutId = null;\nlet position = null;\n\nconst btnDisabled = () => {\n  btn.disabled = true;\n};\n\nbtn.addEventListener('click', callCreatePromiseNOW);\n\nfunction callCreatePromiseNOW(event) {\n  event.preventDefault();\n  delay = inputStepDelay[0].value;\n  amount = inputAmount[0].value;\n  firstDelay = inputFirstDelay[0].value;\n  // console.log(firstDelay);\n  timeoutId = setTimeout(() => {\n    for (let i = 1; i < amount; i += 1) {\n      setTimeout(() => {\n     \n    createPromise(2, 1500)\n  .then(({ position, delay }) => {\n    console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({ position, delay }) => {\n    console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n  });\n        \n    }, delay);\n    }\n\n  },firstDelay);\n}\n\n\nfunction createPromise(position, delay) {\n  delay = inputStepDelay[0].value;\n  positionPromise += 1;\n  position = positionPromise;\n  let promise =  new Promise((resolve, reject) => {\n\n    const shouldResolve = Math.random() > 0.3;\n    if (shouldResolve) {\n      // Fulfill\n      resolve({ position, delay });\n    } else {\n      reject({ position, delay });\n      // Reject\n    }\n\n  })\n  return promise;\n};\n\n// promise\n//   .then(({ position, delay }) => {\n//     console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n//   })\n//   .catch(({ position, delay }) => {\n//     console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n//   });\n\n\n// createPromise(2, 1500)\n//   .then(({ position, delay }) => {\n//     console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n//   })\n//   .catch(({ position, delay }) => {\n//     console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n//   });\n\n\n\n\n\n\n\n\n// function createPromise(position, delay) {\n//   // event.preventDefault();\n//   btnDisabled();\n//   firstDelay = inputFirstDelay[0].value;\n//   setTimeout(() => {\n//     delay = inputStepDelay[0].value;\n   \n     \n//          intervalId = setInterval(() => {\n//            positionPromise += 1;\n         \n//           position = positionPromise;\n//       let amount = inputAmount[0].value;\n     \n//       if (amount == positionPromise) {\n//         clearInterval(intervalId);\n//         // location.reload();\n//       }\n      \n//            const shouldResolve = Math.random() > 0.3;\n//             return new Promise((resolve, reject) => {\n//         if (shouldResolve) {\n\n//         // Fulfill\n//         resolve('sdfddf');\n//       // console.log(position);\n//       console.dir(resolve);\n      \n//       } else {\n//           reject('dfdfddf');\n//           console.log( reject);\n//         // reject\n        \n//         }\n//         //  return Promise;\n//       }) \n      \n      \n//     }, delay)}, firstDelay)\n//     // return promise({ position, delay });\n//     // return{position,delay}\n//   }\n\n// createPromise(2, 1500)\n//   .then(({position, delay} ) => {\n//     console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n//   })\n//   .catch(({ position, delay }) => {\n//     console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n//   });\n\n"],"names":["$47d4ff9957288465$var$inputFirstDelay","document","getElementsByName","$47d4ff9957288465$var$inputStepDelay","$47d4ff9957288465$var$inputAmount","$47d4ff9957288465$var$btn","querySelector","$47d4ff9957288465$var$positionPromise","$47d4ff9957288465$var$delay","$47d4ff9957288465$var$firstDelay","$47d4ff9957288465$var$amount","$47d4ff9957288465$var$timeoutId","$47d4ff9957288465$var$createPromise","position3","delay3","value","Promise","resolve","reject","Math","random","position","delay","addEventListener","event","preventDefault","setTimeout","i","then","position1","delay1","console","log","catch","position2","delay2"],"version":3,"file":"03-promises.2f60b2c7.js.map"}